#version: '3.8'

services:

  broker:
    build:
      context: ./broker_component
    ports:
      - "1883:1883"
    networks:
      - mqtt_net
    restart: unless-stopped

  # Default simulator (headless)services:
  simulator-headless:
    build:
      context: ./simulator_component
      dockerfile: Dockerfile
    image: ghcr.io/j-automationlab/simulator:latest
    container_name: simulator-headless
    profiles: ["headless"]
    environment:
      - HOME=/home/hostuser
      - WEBOTS_MODE=headless
      - DISPLAY=:99
      - WEBOTS_HEADLESS=1
      - QT_X11_NO_MITSHM=1
    #volumes:
      #- ./simulator_component:/home/hostuser/workspace/simulator_component
      #- ./simulator_component/config/preferences.xml:/home/hostuser/.config/Webots/preferences.xml
    networks:
      - mqtt_net
    devices:
      - /dev/dri
    restart: on-failure
    stdin_open: true
    tty: true

  simulator-gui:
    build:
      context: ./simulator_component
      dockerfile: Dockerfile
    image: ghcr.io/j-automationlab/simulator:latest
    container_name: simulator-gui
    profiles: ["gui"]
    environment:
      - HOME=/home/hostuser
      - WEBOTS_MODE=gui
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      #- ./simulator_component:/home/hostuser/workspace/simulator_component
      #- ./simulator_component/config/preferences.xml:/home/hostuser/.config/Webots/preferences.xml
    devices:
      - /dev/dri
    networks:
      - mqtt_net
    restart: on-failure
    stdin_open: true
    tty: true


  agent:
    build:
      context: ./agent_component
      dockerfile: Dockerfile
    image: ghcr.io/j-automationlab/agent:latest
    container_name: agent
    environment:
      - DISPLAY=${DISPLAY}
      - HOME=/home/hostuser
      - NVIDIA_VISIBLE_DEVICES=all
      - PYTHONPATH=/home/hostuser/workspace/agent_component
    volumes:
      #- ./agent_component:/home/hostuser/workspace/agent_component
      - ../database/backups:/home/hostuser/workspace/database/backup
    stdin_open: true
    tty: true
    networks:
      - mqtt_net
    entrypoint: /bin/bash
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]


networks:
  mqtt_net:
    driver: bridge
